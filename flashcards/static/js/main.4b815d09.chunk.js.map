{"version":3,"sources":["components/Config/Operation/index.js","utils/index.js","contexts/Operations/Operation.js","contexts/Operations/index.js","contexts/Operations/AdditionOperation.js","contexts/Operations/SubtractionOperation.js","contexts/Operations/MultiplicationOperation.js","contexts/Operations/DivisionOperation.js","contexts/Operations/MoneyOperation.js","contexts/AppContext.js","components/Config/index.js","components/Header/index.js","components/History/HistoryItem.js","components/History/index.js","components/QuestionForm/index.js","components/Score/index.js","components/FlashCards/index.js","App.js","index.js"],"names":["Operation","index","operation","onChange","symbol","min","max","active","className","htmlFor","id","type","checked","value","toString","event","target","length","Number","parseInt","defaultProps","formatCurrency","number","toFixed","randomNumber","precision","factor","preciseMin","preciseMax","Math","floor","random","formatNumber","numAsString","div3","mod3","returnValue","substring","i","start","end","formatPriceString","items","priceString","forEach","item","decimals","this","accumulator","utils","numbers","string","answer","reduce","AdditionOperation","a","b","SubtractionOperation","MultiplicationOperation","DivisionOperation","createQuestion","denominator","numerator","MoneyOperation","params","findMinCash","total","denominations","cash","predicate","find","numItems","maxItems","cashPaid","round","Context","React","createContext","DEFAULT_CONFIG","operations","Operations","timeBetweenQuestions","AppStore","state","config","history","question","setConfig","setState","setQuestion","activeOperations","acc","cur","push","addResultToHistory","result","prevState","Provider","props","children","Component","Config","useState","open","setOpen","hasChange","setHasChange","useContext","AppContext","handleConfigClose","handleOperationChange","findIndex","Icon","name","onClick","Modal","size","onClose","Header","Content","map","key","Actions","Button","HistoryItem","userAnswer","correct","History","appContext","slice","reverse","QuestionForm","createResult","checkAnswer","resultString","displayResult","handleChange","trim","test","handleSubmit","preventDefault","context","setTimeout","onSubmit","contextType","Score","numberCorrect","totalQuestions","correctVsTotal","score","scoreAsPercent","_","FlashCards","app","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b815d09.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Operation = ({\r\n  index,\r\n  operation,\r\n  onChange,\r\n}) => {\r\n  const { symbol, min, max, active } = operation;\r\n\r\n  const handleActiveChange = () => {\r\n    operation.active = !operation.active;\r\n    onChange(operation);\r\n  };\r\n\r\n  const handleMinChange = (event) => {\r\n    const { value } = event.target;\r\n    operation.min = value.length > 0 ? Number.parseInt(value, 10) : 0;\r\n    onChange(operation);\r\n  };\r\n\r\n  const handleMaxChange = (event) => {\r\n    const { value } = event.target;\r\n    operation.max = value.length > 0 ? Number.parseInt(value, 10) : 0;\r\n    onChange(operation);\r\n  };\r\n\r\n  return (\r\n    <div className=\"config-row\">\r\n      <div className=\"config-row-item\">\r\n        <label htmlFor={`active-${index}`} className=\"switch\">\r\n          <input\r\n            id={`active-${index}`}\r\n            type=\"checkbox\"\r\n            onChange={handleActiveChange}\r\n            checked={active}\r\n          />\r\n          <span className=\"slider round\" />\r\n        </label>\r\n      </div>\r\n      <div className=\"config-row-item\">\r\n        <span className=\"symbol\">\r\n          {symbol}\r\n        </span>\r\n      </div>\r\n      <div className=\"config-row-item\">\r\n        <label htmlFor=\"min\">\r\n          <span className=\"label-text\">\r\n            {'Min:'}\r\n          </span>\r\n          <input\r\n            className=\"medium-integer\"\r\n            id={`min-${index}`}\r\n            type=\"number\"\r\n            value={min.toString()}\r\n            onChange={handleMinChange}\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className=\"config-row-item\">\r\n        <label htmlFor=\"max\">\r\n          <span className=\"label-text\">\r\n            {'Max:'}\r\n          </span>\r\n          <input\r\n            className=\"medium-integer\"\r\n            id={`max-${index}`}\r\n            type=\"number\"\r\n            value={max.toString()}\r\n            onChange={handleMaxChange}\r\n          />\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nOperation.propTypes = {\r\n  index: PropTypes.number.isRequired,\r\n  operation: PropTypes.shape({\r\n    symbol: PropTypes.string,\r\n    min: PropTypes.number,\r\n    max: PropTypes.number,\r\n    active: PropTypes.bool,\r\n  }),\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nOperation.defaultProps = {\r\n  operation: {\r\n    symbol: '',\r\n    min: 0,\r\n    max: 0,\r\n    active: true,\r\n  },\r\n  onChange: () => {},\r\n};\r\n\r\nexport default Operation;\r\n","const randomNumber = (min, max, precision = 0) => {\r\n  const factor = 10 ** precision;\r\n  const preciseMin = min * factor;\r\n  const preciseMax = max * factor;\r\n  const number = Math.floor((Math.random() * (preciseMax - preciseMin + 1)) + preciseMin) / factor;\r\n\r\n  return number;\r\n};\r\n\r\nconst formatNumber = (number) => {\r\n  const numAsString = number.toString();\r\n  const div3 = Math.floor(numAsString.length / 3);\r\n  const mod3 = numAsString.length % 3;\r\n\r\n  let returnValue = numAsString.substring(0, mod3);\r\n  for (let i = 0; i < div3; i += 1) {\r\n    const start = mod3 + 3 * i;\r\n    const end = start + 3;\r\n    const seperatorOn = (i > 0 && div3 > 0) || mod3 > 0;\r\n    returnValue += `${seperatorOn ? ',' : ''}${numAsString.substring(start, end)}`;\r\n  }\r\n\r\n  return returnValue;\r\n};\r\n\r\nconst formatCurrency = (number) => {\r\n  return `$${number.toFixed(2)}`;\r\n};\r\n\r\nconst formatPriceString = (items) => {\r\n  let priceString = '';\r\n  items.forEach((item, index) => {\r\n    if (index === 0) {\r\n      priceString = formatCurrency(item);\r\n    } else if (index < items.length - 1) {\r\n      priceString += `, ${formatCurrency(item)}`;\r\n    } else {\r\n      priceString += ` and ${formatCurrency(item)}`;\r\n    }\r\n  });\r\n\r\n  return priceString;\r\n};\r\n\r\nexport default {\r\n  randomNumber,\r\n  formatNumber,\r\n  formatCurrency,\r\n  formatPriceString,\r\n}\r\n","import utils from '../../utils';\r\n\r\nclass Operation {\r\n  constructor({ symbol, active, min, max, decimals }) {\r\n    this.symbol = symbol;\r\n    this.active = active;\r\n    this.min = min;\r\n    this.max = max;\r\n    this.decimals = decimals;\r\n  };\r\n\r\n  /*\r\n   * method: createQuestion\r\n   * purpose: generate a question where the answer is simple to determine\r\n   *   ie) a + b\r\n   * returns: the question generated\r\n   */\r\n  createQuestion(accumulator) {\r\n    const { randomNumber, formatNumber } = utils;\r\n    const numbers = [];\r\n\r\n    // create required random numbers\r\n    for (let i = 0; i < 2; i += 1) {\r\n      numbers[i] = randomNumber(this.min, this.max, this.decimals);\r\n    }\r\n\r\n    // generate the question string\r\n    const string = `${formatNumber(numbers[0])} ${this.symbol} ${formatNumber(numbers[1])}`;\r\n\r\n    // calculate the answer\r\n    const answer = numbers.reduce(accumulator);\r\n\r\n    return {\r\n      string,\r\n      answer,\r\n    };\r\n  };\r\n}\r\n\r\nexport default Operation;\r\n","\r\nimport AdditionOperation from './AdditionOperation';\r\nimport SubtractionOperation from './SubtractionOperation';\r\nimport MultiplicationOperation from './MultiplicationOperation';\r\nimport DivisionOperation from './DivisionOperation';\r\nimport MoneyOperation from './MoneyOperation';\r\n\r\nexport default {\r\n  AdditionOperation,\r\n  SubtractionOperation,\r\n  MultiplicationOperation,\r\n  DivisionOperation,\r\n  MoneyOperation,\r\n};\r\n","import Operation from './Operation';\r\n\r\nclass AdditionOperation extends Operation {\r\n  createQuestion() {\r\n    return super.createQuestion((a, b) => a + b);\r\n  }\r\n}\r\n\r\nexport default AdditionOperation;\r\n","import Operation from './Operation';\r\n\r\nclass SubtractionOperation extends Operation {\r\n  createQuestion() {\r\n    return super.createQuestion((a, b) => a - b);\r\n  }\r\n}\r\n\r\nexport default SubtractionOperation;\r\n","import Operation from './Operation';\r\n\r\nclass MultiplicationOperation extends Operation {\r\n  createQuestion() {\r\n    return super.createQuestion((a, b) => a * b);\r\n  }\r\n}\r\n\r\nexport default MultiplicationOperation;\r\n","import Operation from './Operation';\r\nimport utils from '../../utils';\r\n\r\nclass DivisionOperation extends Operation {\r\n  createQuestion = () => {\r\n    const answer = utils.randomNumber(this.min, this.max);\r\n    let denominator = utils.randomNumber(this.min, this.max);\r\n    while (denominator === 0) {\r\n      denominator = utils.randomNumber(this.min, this.max);\r\n    }\r\n    const numerator = answer * denominator;\r\n    const string = `${utils.formatNumber(numerator)} ${this.symbol} ${utils.formatNumber(denominator)}`;\r\n  \r\n    return {\r\n      string,\r\n      answer,\r\n    };\r\n  };\r\n}\r\n\r\nexport default DivisionOperation;\r\n","import Operation from './Operation';\r\nimport utils from '../../utils';\r\n\r\nclass MoneyOperation extends Operation {\r\n  constructor(params) {\r\n    super(params);\r\n    this.maxItems = params.maxItems;\r\n  }\r\n\r\n  findMinCash = (total) => {\r\n    const denominations = [1, 2, 5, 10, 20, 50, 100];\r\n    let cash = 0;\r\n  \r\n    const predicate = (value) => {\r\n      return (value === 100 || value > (total - cash));\r\n    };\r\n  \r\n    while (cash < total) {\r\n      cash += denominations.find(predicate);\r\n    }\r\n  \r\n    return cash;\r\n  };\r\n\r\n  createQuestion = () => {\r\n    const factor = 10 ** this.decimals;\r\n    const numItems = utils.randomNumber(1, this.maxItems);\r\n    const items = [];\r\n    let total = 0;\r\n    for (let i = 0; i < numItems; i += 1) {\r\n      items[i] = utils.randomNumber(this.min, this.max, this.decimals);\r\n      total += items[i];\r\n    }\r\n    const cashPaid = this.findMinCash(total);\r\n    const answer = Math.round((cashPaid - total) * factor) / factor;\r\n    const string = `You want to purchase ${numItems} `\r\n      + `${(numItems === 1 ? 'item with price' : 'items with prices')} of `\r\n      + `${utils.formatPriceString(items)}. You give the cashier ${utils.formatCurrency(cashPaid)}, `\r\n      + 'how much change should you expect?';\r\n\r\n    return {\r\n      string,\r\n      answer,\r\n    };\r\n  }\r\n}\r\n\r\nexport default MoneyOperation;\r\n","import React from 'react';\r\n\r\nimport Operations from './Operations';\r\nimport utils from '../utils';\r\n\r\nconst Context = React.createContext();\r\n\r\n// constant parameters for the operations and their default settings\r\nconst ADDITION_PARAMS = { symbol: '+', min: 0, max: 10, decimals: 0, active: true };\r\nconst SUBTRACTION_PARAMS = { symbol: '-', min: 0, max: 10, decimals: 0, active: true };\r\nconst MULTIPLICATION_PARAMS = { symbol: '×', min: 0, max: 10, decimals: 0, active: true };\r\nconst DIVISION_PARAMS = { symbol: '÷', min: 0, max: 10, decimals: 0, active: true };\r\nconst MONEY_PARAMS = { symbol: '$', min: 0, max: 10, decimals: 2, active: true, maxItems: 3 };\r\n\r\n// setup the defalut configuration object\r\nconst DEFAULT_CONFIG = {\r\n  operations: [\r\n    new Operations.AdditionOperation(ADDITION_PARAMS),\r\n    new Operations.SubtractionOperation(SUBTRACTION_PARAMS),\r\n    new Operations.MultiplicationOperation(MULTIPLICATION_PARAMS),\r\n    new Operations.DivisionOperation(DIVISION_PARAMS),\r\n    new Operations.MoneyOperation(MONEY_PARAMS),\r\n  ],\r\n  timeBetweenQuestions: 1500,\r\n};\r\n\r\nexport class AppStore extends React.Component {\r\n  // state that hold all application data\r\n  state = {\r\n    config: DEFAULT_CONFIG,\r\n    history: [],\r\n    question: {},\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.createQuestion();\r\n  }\r\n\r\n  // methods to update application state\r\n  setConfig = (config) => this.setState({ config });\r\n  setQuestion = (question) => this.setState({ question });\r\n\r\n  // method to create a new question\r\n  createQuestion = () => {\r\n    let question = {};\r\n    const { operations } = this.state.config;\r\n\r\n    // get an array of operations that are active\r\n    const activeOperations = operations.reduce((acc, cur) => {\r\n      if (cur.active) {\r\n        acc.push(cur);\r\n      }\r\n      return acc;\r\n    }, []);\r\n\r\n    // if there are some active operations, create a new question\r\n    if (activeOperations.length > 0) {\r\n      const index = utils.randomNumber(0, activeOperations.length - 1, 0);\r\n      question = activeOperations[index].createQuestion();\r\n    }\r\n\r\n    this.setQuestion(question);\r\n  };\r\n\r\n  addResultToHistory = (result) => {\r\n    this.setState((prevState) => ({\r\n      history: [\r\n        ...prevState.history,\r\n        {\r\n          ...result,\r\n          number: prevState.history.length + 1,\r\n        },\r\n      ],\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const value = {\r\n      config: this.state.config,\r\n      setConfig: this.setConfig,\r\n      history: this.state.history,\r\n      addResultToHistory: this.addResultToHistory,\r\n      question: this.state.question,\r\n      createQuestion: this.createQuestion,\r\n      setQuestion: this.setQuestion,\r\n    };\r\n\r\n    return (\r\n      <Context.Provider value={value}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Context;\r\n","import React, { Fragment } from 'react';\r\nimport { Icon, Modal, Button } from 'semantic-ui-react';\r\n\r\nimport Operation from './Operation';\r\nimport AppContext from '../../contexts/AppContext';\r\n\r\nconst Config = () => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [hasChange, setHasChange] = React.useState(false);\r\n  const { config, setConfig, createQuestion } = React.useContext(AppContext);\r\n\r\n  // event handler for opening configuration modal\r\n  const handleConfigOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  // event handler for closing configuration modal\r\n  const handleConfigClose = () => {\r\n    setOpen(false);\r\n\r\n    // if configuration has changed, create a new question\r\n    if (hasChange) {\r\n      createQuestion();\r\n      setHasChange(false);\r\n    };\r\n  };\r\n\r\n  // event handler for an operation change\r\n  const handleOperationChange = (operation) => {\r\n    // find and update the operation that has changed\r\n    const index = config.operations.findIndex((item) => item.symbol === operation.symbol);\r\n    config.operations[index] = operation;\r\n    setConfig(config);\r\n    setHasChange(true);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Icon name=\"cog\" onClick={handleConfigOpen} />\r\n      <Modal size=\"tiny\" open={open} onClose={handleConfigClose}>\r\n        <Modal.Header className=\"center\">Config</Modal.Header>\r\n        <Modal.Content>\r\n          <Fragment>\r\n            {config.operations.map((operation, index) => (\r\n              <Operation\r\n                index={index}\r\n                key={operation.symbol}\r\n                operation={operation}\r\n                onChange={handleOperationChange}\r\n              />\r\n            ))}\r\n          </Fragment>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button onClick={handleConfigClose}>Close</Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Config;\r\n","import React from 'react';\n\nimport Config from '../Config';\n\nconst Header = () => {\n  return (\n    <header className=\"app-header\">\n      <div className=\"header-title\">\n        Flash Cards\n      </div>\n      <div className=\"header-config text-right\">\n        <Config />\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst HistoryItem = ({\r\n  number,\r\n  question,\r\n  answer,\r\n  userAnswer,\r\n  correct,\r\n}) => (\r\n  <tr>\r\n    <td className=\"text-center\">{number}</td>\r\n    <td className=\"text-left\">{question}</td>\r\n    <td className=\"text-center\">{answer}</td>\r\n    <td className=\"text-center\">{userAnswer}</td>\r\n    <td className=\"text-center\">{correct ? 'Yes' : 'No'}</td>\r\n  </tr>\r\n);\r\n\r\nHistoryItem.propTypes = {\r\n  number: PropTypes.number.isRequired,\r\n  question: PropTypes.string.isRequired,\r\n  answer: PropTypes.number.isRequired,\r\n  userAnswer: PropTypes.number.isRequired,\r\n  correct: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default HistoryItem;\r\n","import React from 'react';\r\n\r\nimport HistoryItem from './HistoryItem';\r\nimport AppContext from '../../contexts/AppContext';\r\n\r\nconst renderHistoryItems = history => (\r\n  history.slice(0).reverse().map(result => (\r\n    <HistoryItem\r\n      key={result.number}\r\n      number={result.number}\r\n      question={result.string}\r\n      answer={result.answer}\r\n      userAnswer={result.userAnswer}\r\n      correct={result.correct}\r\n    />\r\n  ))\r\n);\r\n\r\nconst History = () => {\r\n  const appContext = React.useContext(AppContext);\r\n\r\n  return (\r\n    <table className=\"history\">\r\n      <tbody>\r\n        <tr>\r\n          <th className=\"history-number\">#</th>\r\n          <th className=\"history-question\">Question</th>\r\n          <th className=\"history-answer\">Expected Answer</th>\r\n          <th className=\"history-answer\">You Answered</th>\r\n          <th className=\"history-correct\">Correct?</th>\r\n        </tr>\r\n        { renderHistoryItems(appContext.history) }\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","import React from 'react';\r\n\r\nimport AppContext from '../../contexts/AppContext';\r\n\r\nclass QuestionForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      answer: '',\r\n      displayResult: false,\r\n    };\r\n  };\r\n\r\n  static contextType = AppContext;\r\n  \r\n  createResult = (question, userAnswer) => (\r\n    {\r\n      ...question,\r\n      userAnswer,\r\n      correct: userAnswer === question.answer,\r\n    }\r\n  );\r\n\r\n  checkAnswer = (result) => {\r\n    if (result.correct) {\r\n      return {\r\n        resultString: 'You are correct',\r\n        displayResult: true,\r\n        correct: result.correct,\r\n      };\r\n    }\r\n    return {\r\n      resultString: 'That is not the correct answer',\r\n      displayResult: true,\r\n      correct: result.correct,\r\n    };\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const regex = /(\\s)|(^[-]?[\\d]*[.]?[\\d]*)$/;\r\n    const value = event.target.value.trim();\r\n\r\n    if (regex.test(value)) {\r\n      this.setState({\r\n        answer: value,\r\n        displayResult: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const result = this.createResult(this.context.question, Number(this.state.answer));\r\n    this.setState(this.checkAnswer(result));\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        answer: '',\r\n        displayResult: false,\r\n      })\r\n      this.props.onSubmit(result);\r\n    }, this.context.config.timeBetweenQuestions);\r\n  }\r\n\r\n  render() {\r\n    const { question } = this.context;\r\n    const { correct, displayResult, resultString } = this.state;\r\n\r\n    return question.string ? (\r\n      <form className=\"question-container\" onSubmit={this.handleSubmit}>\r\n        <div className=\"question\">\r\n          {`${question.string}`}\r\n        </div>\r\n        <div className=\"answer\">\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.answer}\r\n            onChange={this.handleChange}\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Submit\"\r\n          />\r\n        </div>\r\n        <div className={`result ${correct ? 'correct' : ''}`}>\r\n          { displayResult\r\n            ? resultString\r\n            : null\r\n          }\r\n        </div>\r\n      </form>\r\n    ) : null;\r\n  };\r\n};\r\n\r\nexport default QuestionForm;\r\n","import _ from 'lodash';\r\nimport React from 'react';\r\n\r\nimport AppContext from '../../contexts/AppContext';\r\n\r\nconst Score = () => {\r\n  const appContext = React.useContext(AppContext);\r\n  const numberCorrect = appContext.history.reduce((acc, result) => {\r\n    return (result.correct ? acc + 1 : acc);\r\n  }, 0);\r\n  const totalQuestions = appContext.history.length;\r\n\r\n  const correctVsTotal = `${numberCorrect}/${totalQuestions}`;\r\n  const score = totalQuestions > 0 ? numberCorrect / totalQuestions : 0;\r\n  const scoreAsPercent = _.round(score * 100, 2);\r\n  return (\r\n    <div className=\"score\">\r\n      {`Score: ${scoreAsPercent}% (${correctVsTotal})`}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Score;\r\n","import React from 'react';\r\n\r\nimport Header from '../Header';\r\nimport History from '../History';\r\nimport QuestionForm from '../QuestionForm';\r\nimport Score from '../Score';\r\nimport AppContext from '../../contexts/AppContext';\r\n\r\nconst FlashCards = () => {\r\n  const app = React.useContext(AppContext);\r\n\r\n  const handleSubmit = (result) => {\r\n    app.addResultToHistory(result);\r\n    app.createQuestion();\r\n  };\r\n  \r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      <Score />\r\n      <QuestionForm onSubmit={handleSubmit} />\r\n      <History />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlashCards;\r\n","import React from 'react';\r\n\r\nimport './styles/App.css';\r\n\r\nimport FlashCards from './components/FlashCards';\r\nimport { AppStore } from './contexts/AppContext';\r\n\r\nconst App = () => {\r\n  return (\r\n    <AppStore>\r\n      <FlashCards />\r\n    </AppStore>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}