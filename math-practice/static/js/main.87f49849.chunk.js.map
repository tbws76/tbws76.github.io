{"version":3,"sources":["components/Modal/index.js","containers/Config/Operation/index.js","containers/Config/actions.js","containers/Config/actionTypes.js","containers/Config/index.js","components/Header/index.js","components/Question/index.js","components/History/HistoryItem/index.js","components/History/index.js","components/Score/index.js","utils/index.js","containers/MathPractice/index.js","App.js","containers/Config/reducers.js","reducers.js","index.js"],"names":["Modal","_ref","show","onClose","children","react_default","a","createElement","className","concat","onClick","defaultProps","Operation","index","operation","onChange","symbol","min","max","active","htmlFor","id","type","checked","value","toString","updateConfig","data","Config","state","handleClick","_this","setState","handleClose","props","handleOperationChange","event","setValue","_this$props","config","updatedOperations","operations","_event$target","target","element","split","toLowerCase","length","Number","parseInt","Object","objectSpread","_this2","this","react","react_fontawesome_index_es","icon","components_Modal","map","Config_Operation","key","Component","timeBetweenQuestions","connect","dispatch","bindActionCreators","updateConfigAction","Header","onConfigClose","containers_Config","initialState","userAnswer","resultString","displayResult","correct","Question","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onUpdate","createResult","question","answer","checkAnswer","result","handleChange","trim","handleSubmit","preventDefault","isNaN","onQuestionAnswered","setTimeout","incomingProps","_","isEqual","answerInput","focus","_this$state","onSubmit","ref","input","undefined","HistoryItem","number","History","history","slice","reverse","item","History_HistoryItem","renderHistoryItems","Score","numberCorrect","totalQuestions","correctVsTotal","score","scoreAsPercent","round","randomNumber","Math","floor","random","formatNumber","numAsString","div3","mod3","returnValue","substring","i","start","end","createSimpleQuestion","operand","accumulator","numbers","utils","createQuestion","activeOperations","reduce","acc","cur","push","b","denominator","createDivisionQuestion","MathPractice","handleQuestionAnswered","newQuestion","prevState","toConsumableArray","handleConfigClose","handleReset","components_Header","components_Score","components_Question","components_History","library","add","faCog","App","containers_MathPractice","DEFAULT_CONFIG","configReducer","arguments","action","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.87f49849.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Modal = ({ show, onClose, children }) => {\r\n  return (\r\n    <div className={`modal ${show ? '' : 'hidden'}`}>\r\n      <div className=\"modal-content\">\r\n        <span className=\"modal-close\" onClick={onClose}>&times;</span>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  show: PropTypes.bool,\r\n  onClose: PropTypes.func,\r\n  children: PropTypes.arrayOf(PropTypes.any),\r\n};\r\n\r\nModal.defaultProps = {\r\n  show: false,\r\n  onClose: () => {},\r\n  children: [],\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Operation = ({\r\n  index,\r\n  operation,\r\n  onChange,\r\n}) => {\r\n  const { symbol, min, max, active } = operation;\r\n\r\n  return (\r\n    <div className=\"config-row\">\r\n      <div className=\"config-row-item\">\r\n        <label htmlFor={`active-${index}`} className=\"switch\">\r\n          <input\r\n            id={`active-${index}`}\r\n            type=\"checkbox\"\r\n            onChange={onChange}\r\n            checked={active}\r\n          />\r\n          <span className=\"slider round\" />\r\n        </label>\r\n      </div>\r\n      <div className=\"config-row-item\">\r\n        <span className=\"symbol\">\r\n          {symbol}\r\n        </span>\r\n      </div>\r\n      <div className=\"config-row-item\">\r\n        <label htmlFor=\"min\">\r\n          <span className=\"label-text\">\r\n            {'Min:'}\r\n          </span>\r\n          <input\r\n            className=\"medium-integer\"\r\n            id={`min-${index}`}\r\n            type=\"number\"\r\n            value={min.toString()}\r\n            onChange={onChange}\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className=\"config-row-item\">\r\n        <label htmlFor=\"max\">\r\n          <span className=\"label-text\">\r\n            {'Max:'}\r\n          </span>\r\n          <input\r\n            className=\"medium-integer\"\r\n            id={`max-${index}`}\r\n            type=\"number\"\r\n            value={max.toString()}\r\n            onChange={onChange}\r\n          />\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nOperation.propTypes = {\r\n  index: PropTypes.number.isRequired,\r\n  operation: PropTypes.shape({\r\n    symbol: PropTypes.string,\r\n    min: PropTypes.number,\r\n    max: PropTypes.number,\r\n    active: PropTypes.bool,\r\n  }),\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nOperation.defaultProps = {\r\n  operation: {\r\n    symbol: '',\r\n    min: 0,\r\n    max: 0,\r\n    active: true,\r\n  },\r\n  onChange: () => {},\r\n};\r\n\r\nexport default Operation;\r\n","\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const updateConfig = (data) => {\r\n  return ({\r\n    type: actionTypes.UPDATE_CONFIG,\r\n    data,\r\n  });\r\n};\r\n\r\nexport default updateConfig;\r\n","\r\nexport const UPDATE_CONFIG = 'update_config';\r\n\r\nexport default UPDATE_CONFIG;\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport Modal from '../../components/Modal';\r\nimport Operation from './Operation';\r\nimport { updateConfig as updateConfigAction } from './actions';\r\n\r\nimport '../../App.css';\r\n\r\nclass Config extends Component {\r\n  state = { show: false };\r\n\r\n  handleClick = () => {\r\n    this.setState({ show: true });\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ show: false });\r\n    this.props.onClose();\r\n  }\r\n\r\n  handleOperationChange = (event, index) => {\r\n    const { config, updateConfig } = this.props;\r\n    const updatedOperations = config.operations;\r\n    const { id, value, type } = event.target;\r\n    const element = id.split('-')[0];\r\n    let setValue;\r\n\r\n    switch (type.toLowerCase()) {\r\n      case 'checkbox':\r\n        setValue = !updatedOperations[index][element];\r\n        break;\r\n      case 'number':\r\n        setValue = value.length > 0 ? Number.parseInt(value, 10) : 0;\r\n        break;\r\n      default:\r\n        setValue = value;\r\n        break;\r\n    }\r\n\r\n    updatedOperations[index][element] = setValue;\r\n\r\n    updateConfig({\r\n      ...config,\r\n      operations: updatedOperations,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { config } = this.props;\r\n    const { show } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <FontAwesomeIcon icon=\"cog\" onClick={this.handleClick} />\r\n        <Modal show={show} onClose={this.handleClose}>\r\n          <p>Config</p>\r\n          {config.operations.map((operation, index) => (\r\n            <Operation\r\n              index={index}\r\n              key={operation.symbol}\r\n              operation={operation}\r\n              onChange={(event) => { this.handleOperationChange(event, index); }}\r\n            />\r\n          ))}\r\n        </Modal>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nConfig.propTypes = {\r\n  config: PropTypes.shape({\r\n    operations: PropTypes.arrayOf(PropTypes.shape()),\r\n    timeBetweenQuestions: PropTypes.number,\r\n  }),\r\n  updateConfig: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n};\r\n\r\nConfig.defaultProps = {\r\n  config: {\r\n    operations: [],\r\n    timeBetweenQuestions: 0,\r\n  },\r\n  updateConfig: () => {},\r\n  onClose: () => {},\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    config: state.config,\r\n  });\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators({\r\n    updateConfig: updateConfigAction,\r\n  }, dispatch);\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Config);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Config from '../../containers/Config';\r\n\r\nconst Header = ({ onConfigClose }) => (\r\n  <header className=\"app-header\">\r\n    <span className=\"header-item\">\r\n      <Config onClose={onConfigClose} />\r\n    </span>\r\n  </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n  onConfigClose: PropTypes.func,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  onConfigClose: () => {},\r\n};\r\n\r\nexport default Header;\r\n","import _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst initialState = {\r\n  userAnswer: '',\r\n  resultString: '',\r\n  displayResult: false,\r\n  correct: false,\r\n};\r\n\r\nclass Question extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = initialState;\r\n  }\r\n\r\n  componentDidUpdate(incomingProps) {\r\n    if (!_.isEqual(incomingProps, this.props)) {\r\n      this.onUpdate();\r\n      this.answerInput.focus();\r\n    }\r\n  }\r\n\r\n  onUpdate = () => {\r\n    this.setState(initialState);\r\n  }\r\n\r\n  createResult = (question, userAnswer, answer) => (\r\n    {\r\n      question,\r\n      userAnswer,\r\n      answer,\r\n      correct: userAnswer === answer,\r\n    }\r\n  );\r\n\r\n  checkAnswer = (result) => {\r\n    if (result.correct) {\r\n      return {\r\n        resultString: 'You are correct',\r\n        displayResult: true,\r\n        correct: result.correct,\r\n      };\r\n    }\r\n    return {\r\n      resultString: 'That is not the correct answer',\r\n      displayResult: true,\r\n      correct: result.correct,\r\n    };\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const value = event.target.value.trim();\r\n    this.setState({\r\n      userAnswer: value,\r\n      displayResult: false,\r\n    });\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { userAnswer } = this.state;\r\n    const { timeBetweenQuestions } = this.props;\r\n\r\n    if (Number.isNaN(userAnswer)) {\r\n      this.setState({\r\n        resultString: `Error '${userAnswer}' is not a number`,\r\n        displayResult: true,\r\n      });\r\n    } else {\r\n      const { answer, question, onQuestionAnswered } = this.props;\r\n      const result = this.createResult(question, Number(userAnswer), answer);\r\n      this.setState(this.checkAnswer(result));\r\n      setTimeout(() => {\r\n        onQuestionAnswered(result);\r\n      }, timeBetweenQuestions);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { question } = this.props;\r\n    const { userAnswer, displayResult, resultString, correct } = this.state;\r\n\r\n    return question.length ? (\r\n      <form className=\"question-container\" onSubmit={this.handleSubmit}>\r\n        <div className=\"question\">\r\n          {`${question}`}\r\n        </div>\r\n        <div className=\"answer\">\r\n          <input\r\n            type=\"number\"\r\n            ref={(input) => { this.answerInput = input; }}\r\n            value={userAnswer}\r\n            onChange={this.handleChange}\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Submit\"\r\n          />\r\n        </div>\r\n        <div className={`result ${correct ? 'correct' : ''}`}>\r\n          { displayResult\r\n            ? resultString\r\n            : null\r\n          }\r\n        </div>\r\n      </form>\r\n    ) : null;\r\n  }\r\n}\r\n\r\nQuestion.propTypes = {\r\n  answer: PropTypes.number,\r\n  question: PropTypes.string,\r\n  onQuestionAnswered: PropTypes.func,\r\n  timeBetweenQuestions: PropTypes.number,\r\n};\r\n\r\nQuestion.defaultProps = {\r\n  answer: undefined,\r\n  question: '',\r\n  onQuestionAnswered: () => {},\r\n  timeBetweenQuestions: 2000,\r\n};\r\n\r\nexport default Question;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst HistoryItem = ({\r\n  number,\r\n  question,\r\n  answer,\r\n  userAnswer,\r\n  correct,\r\n}) => (\r\n  <tr>\r\n    <td>{number}</td>\r\n    <td>{question}</td>\r\n    <td>{answer}</td>\r\n    <td>{userAnswer}</td>\r\n    <td>{correct ? 'Yes' : 'No'}</td>\r\n  </tr>\r\n);\r\n\r\nHistoryItem.propTypes = {\r\n  number: PropTypes.number.isRequired,\r\n  question: PropTypes.string.isRequired,\r\n  answer: PropTypes.number.isRequired,\r\n  userAnswer: PropTypes.number.isRequired,\r\n  correct: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default HistoryItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport HistoryItem from './HistoryItem';\r\n\r\n\r\nconst renderHistoryItems = history => (\r\n  history.slice(0).reverse().map(item => (\r\n    <HistoryItem\r\n      key={item.number}\r\n      number={item.number}\r\n      question={item.question}\r\n      answer={item.answer}\r\n      userAnswer={item.userAnswer}\r\n      correct={item.correct}\r\n    />\r\n  ))\r\n);\r\n\r\nconst History = ({ history }) => (\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <th>Number</th>\r\n        <th>Question</th>\r\n        <th>Expected Answer</th>\r\n        <th>You Answered</th>\r\n        <th>Correct?</th>\r\n      </tr>\r\n      { renderHistoryItems(history) }\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nHistory.propTypes = { history: PropTypes.arrayOf(PropTypes.shape()) };\r\n\r\nHistory.defaultProps = { history: [] };\r\n\r\nexport default History;\r\n","import _ from 'lodash';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Score = ({\r\n  numberCorrect,\r\n  totalQuestions,\r\n}) => {\r\n  const correctVsTotal = `${numberCorrect}/${totalQuestions}`;\r\n  const score = totalQuestions > 0 ? numberCorrect / totalQuestions : 0;\r\n  const scoreAsPercent = _.round(score * 100, 2);\r\n  return (\r\n    <div className=\"score\">\r\n      {`Score: ${scoreAsPercent}% (${correctVsTotal})`}\r\n    </div>\r\n  );\r\n};\r\n\r\nScore.propTypes = {\r\n  numberCorrect: PropTypes.number,\r\n  totalQuestions: PropTypes.number,\r\n};\r\n\r\nScore.defaultProps = {\r\n  numberCorrect: 0,\r\n  totalQuestions: 0,\r\n};\r\n\r\nexport default Score;\r\n","\r\nconst randomNumber = (min, max) => Math.floor((Math.random() * (max - min + 1)) + min);\r\n\r\nconst formatNumber = (number) => {\r\n  const numAsString = number.toString();\r\n  const div3 = Math.floor(numAsString.length / 3);\r\n  const mod3 = numAsString.length % 3;\r\n\r\n  let returnValue = numAsString.substring(0, mod3);\r\n  for (let i = 0; i < div3; i += 1) {\r\n    const start = mod3 + 3 * i;\r\n    const end = start + 3;\r\n    const seperatorOn = (i > 0 && div3 > 0) || mod3 > 0;\r\n    returnValue += `${seperatorOn ? ',' : ''}${numAsString.substring(start, end)}`;\r\n  }\r\n\r\n  return returnValue;\r\n};\r\n\r\nconst createSimpleQuestion = (operand, accumulator) => {\r\n  const numbers = [];\r\n  for (let i = 0; i < 2; i += 1) {\r\n    numbers[i] = randomNumber(operand.min, operand.max);\r\n  }\r\n\r\n  const question = `${formatNumber(numbers[0])} ${operand.symbol} ${formatNumber(numbers[1])}`;\r\n  const answer = accumulator(numbers[0], numbers[1]);\r\n\r\n  return {\r\n    question,\r\n    answer,\r\n  };\r\n};\r\n\r\nconst createDivisionQuestion = (operand) => {\r\n  const answer = randomNumber(operand.min, operand.max);\r\n  let denominator = randomNumber(operand.min, operand.max);\r\n  while (denominator === 0) {\r\n    denominator = randomNumber(operand.min, operand.max);\r\n  }\r\n  const numerator = answer * denominator;\r\n  const question = `${formatNumber(numerator)} ${operand.symbol} ${formatNumber(denominator)}`;\r\n\r\n  return {\r\n    question,\r\n    answer,\r\n  };\r\n};\r\n\r\nconst createQuestion = (operations) => {\r\n  const activeOperations = operations.reduce((acc, cur) => {\r\n    if (cur.active) {\r\n      acc.push(cur);\r\n    }\r\n\r\n    return acc;\r\n  }, []);\r\n  const operand = activeOperations[randomNumber(0, activeOperations.length - 1)];\r\n\r\n  switch (operand.symbol) {\r\n    case '+':\r\n      return createSimpleQuestion(operand, (a, b) => a + b);\r\n\r\n    case '-':\r\n      return createSimpleQuestion(operand, (a, b) => a - b);\r\n\r\n    case '×':\r\n      return createSimpleQuestion(operand, (a, b) => a * b);\r\n\r\n    case '÷':\r\n      return createDivisionQuestion(operand);\r\n\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport default {\r\n  randomNumber,\r\n  createQuestion,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Header from '../../components/Header';\r\nimport Question from '../../components/Question';\r\nimport History from '../../components/History';\r\nimport Score from '../../components/Score';\r\nimport utils from '../../utils';\r\nimport '../../App.css';\r\n\r\n\r\nclass MathPractice extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      question: '',\r\n      answer: undefined,\r\n      numberCorrect: 0,\r\n      history: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { config } = this.props;\r\n    const question = utils.createQuestion(config.operations);\r\n    this.setState({ ...question });\r\n  }\r\n\r\n  handleQuestionAnswered = (result) => {\r\n    const { config } = this.props;\r\n    const newQuestion = utils.createQuestion(config.operations);\r\n    this.setState(prevState => ({\r\n      history: [\r\n        ...prevState.history,\r\n        {\r\n          number: (prevState.history.length + 1),\r\n          ...result,\r\n        },\r\n      ],\r\n      numberCorrect: prevState.numberCorrect + (result.correct ? 1 : 0),\r\n      ...newQuestion,\r\n    }));\r\n  };\r\n\r\n  handleConfigClose = () => {\r\n    const { config } = this.props;\r\n    const question = utils.createQuestion(config.operations);\r\n    this.setState({ ...question });\r\n  }\r\n\r\n  handleReset = () => {\r\n    this.setState({ history: [] });\r\n  }\r\n\r\n  render() {\r\n    const { config } = this.props;\r\n    const { question, answer, numberCorrect, history } = this.state;\r\n    return (\r\n      <div>\r\n        <Header onConfigClose={this.handleConfigClose} />\r\n        <Score\r\n          numberCorrect={numberCorrect}\r\n          totalQuestions={history.length}\r\n        />\r\n        <div className=\"app-item\">\r\n          <Question\r\n            question={question}\r\n            answer={answer}\r\n            onQuestionAnswered={this.handleQuestionAnswered}\r\n            timeBetweenQuestions={config.timeBetweenQuestions}\r\n          />\r\n        </div>\r\n        <History history={history} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMathPractice.propTypes = {\r\n  config: PropTypes.shape(),\r\n};\r\n\r\nMathPractice.defaultProps = {\r\n  config: {},\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    config: state.config,\r\n  });\r\n};\r\n\r\nexport default connect(mapStateToProps)(MathPractice);\r\n","import React from 'react';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport MathPractice from './containers/MathPractice';\r\nimport './App.css';\r\n\r\nlibrary.add(faCog);\r\n\r\nconst App = () => (\r\n  <div className=\"app\">\r\n    <MathPractice />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","\r\nimport * as actionTypes from './actionTypes';\r\n\r\nconst DEFAULT_CONFIG = {\r\n  operations: [\r\n    { symbol: '+', min: 0, max: 9, active: true },\r\n    { symbol: '-', min: 0, max: 9, active: true },\r\n    { symbol: '×', min: 0, max: 9, active: true },\r\n    { symbol: '÷', min: 0, max: 9, active: true },\r\n  ],\r\n  timeBetweenQuestions: 1500,\r\n};\r\n\r\nconst configReducer = (state = DEFAULT_CONFIG, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.UPDATE_CONFIG:\r\n      return {\r\n        ...state,\r\n        config: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default configReducer;\r\n","import { combineReducers } from 'redux';\r\nimport configReducer from './containers/Config/reducers';\r\n\r\nconst rootReducer = combineReducers({\r\n  config: configReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport rootReducer from './reducers';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}