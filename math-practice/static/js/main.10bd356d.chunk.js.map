{"version":3,"sources":["components/Modal/index.js","containers/Config/Operation/index.js","containers/Config/actions.js","containers/Config/actionTypes.js","containers/Config/index.js","components/Header/index.js","components/Question/index.js","components/History/HistoryItem/index.js","components/History/index.js","components/Score/index.js","utils/index.js","containers/MathPractice/index.js","App.js","containers/Config/reducers.js","reducers.js","index.js"],"names":["Modal","_ref","show","onClose","children","react_default","a","createElement","className","concat","onClick","defaultProps","Operation","index","operation","onChange","symbol","min","max","active","htmlFor","id","type","checked","value","toString","updateConfig","data","Config","state","change","handleClick","_this","setState","handleClose","props","handleOperationChange","event","setValue","_this$props","config","updatedOperations","operations","_event$target","target","element","split","toLowerCase","length","Number","parseInt","Object","objectSpread","_this2","this","react","react_fontawesome_index_es","icon","components_Modal","map","Config_Operation","key","Component","timeBetweenQuestions","connect","dispatch","bindActionCreators","updateConfigAction","Header","onConfigClose","containers_Config","initialState","userAnswer","resultString","displayResult","correct","Question","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onUpdate","createResult","question","answer","checkAnswer","result","handleChange","b","trim","test","handleSubmit","preventDefault","isNaN","onQuestionAnswered","setTimeout","incomingProps","_","isEqual","answerInput","focus","_this$state","onSubmit","ref","input","undefined","HistoryItem","number","History","history","slice","reverse","item","History_HistoryItem","renderHistoryItems","Score","numberCorrect","totalQuestions","correctVsTotal","score","scoreAsPercent","round","randomNumber","precision","arguments","factor","Math","pow","preciseMin","preciseMax","floor","random","formatNumber","numAsString","div3","mod3","returnValue","substring","i","start","end","formatCurrency","toFixed","createSimpleQuestion","operand","accumulator","numbers","decimals","createCurrencyQuestion","numItems","maxItems","items","total","cashPaid","denominations","cash","predicate","find","findMinCash","priceString","forEach","formatPriceString","utils","createQuestion","activeOperations","reduce","acc","cur","push","denominator","createDivisionQuestion","MathPractice","handleQuestionAnswered","newQuestion","prevState","toConsumableArray","handleConfigClose","configChanged","handleReset","components_Header","components_Score","components_Question","components_History","library","add","faCog","App","containers_MathPractice","DEFAULT_CONFIG","configReducer","action","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"4TAGMA,EAAQ,SAAAC,GAAiC,IAA9BC,EAA8BD,EAA9BC,KAAMC,EAAwBF,EAAxBE,QAASC,EAAeH,EAAfG,SAC9B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,SAAAC,OAAWP,EAAO,GAAK,WACnCG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAcE,QAASP,GAAvC,QACCC,KAYTJ,EAAMW,aAAe,CACnBT,MAAM,EACNC,QAAS,aACTC,SAAU,IAGGJ,QCvBTY,EAAY,SAAAX,GAIZ,IAHJY,EAGIZ,EAHJY,MACAC,EAEIb,EAFJa,UACAC,EACId,EADJc,SAEQC,EAA6BF,EAA7BE,OAAQC,EAAqBH,EAArBG,IAAKC,EAAgBJ,EAAhBI,IAAKC,EAAWL,EAAXK,OAE1B,OACEd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,SAAOa,QAAO,UAAAX,OAAYI,GAASL,UAAU,UAC3CH,EAAAC,EAAAC,cAAA,SACEc,GAAE,UAAAZ,OAAYI,GACdS,KAAK,WACLP,SAAUA,EACVQ,QAASJ,IAEXd,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAGpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UACbQ,IAGLX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,SAAOa,QAAQ,OACbf,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cACb,QAEHH,EAAAC,EAAAC,cAAA,SACEC,UAAU,iBACVa,GAAE,OAAAZ,OAASI,GACXS,KAAK,SACLE,MAAOP,EAAIQ,WACXV,SAAUA,MAIhBV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,SAAOa,QAAQ,OACbf,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cACb,QAEHH,EAAAC,EAAAC,cAAA,SACEC,UAAU,iBACVa,GAAE,OAAAZ,OAASI,GACXS,KAAK,SACLE,MAAON,EAAIO,WACXV,SAAUA,QAmBtBH,EAAUD,aAAe,CACvBG,UAAW,CACTE,OAAQ,GACRC,IAAK,EACLC,IAAK,EACLC,QAAQ,GAEVJ,SAAU,cAGGH,QC9EFc,EAAe,SAACC,GAC3B,MAAQ,CACNL,KCJyB,gBDKzBK,SEOEC,oNACJC,MAAQ,CACN3B,MAAM,EACN4B,QAAQ,KAGVC,YAAc,WACZC,EAAKC,SAAS,CAAE/B,MAAM,OAGxBgC,YAAc,WAAM,IACVJ,EAAWE,EAAKH,MAAhBC,OACRE,EAAKC,SAAS,CAAE/B,MAAM,EAAO4B,QAAQ,IACrCE,EAAKG,MAAMhC,QAAQ2B,MAGrBM,sBAAwB,SAACC,EAAOxB,GAAU,IAKpCyB,EALoCC,EACPP,EAAKG,MAA9BK,EADgCD,EAChCC,OAAQd,EADwBa,EACxBb,aACVe,EAAoBD,EAAOE,WAFOC,EAGZN,EAAMO,OAA1BvB,EAHgCsB,EAGhCtB,GAAIG,EAH4BmB,EAG5BnB,MAAOF,EAHqBqB,EAGrBrB,KACbuB,EAAUxB,EAAGyB,MAAM,KAAK,GAG9B,OAAQxB,EAAKyB,eACX,IAAK,WACHT,GAAYG,EAAkB5B,GAAOgC,GACrC,MACF,IAAK,SACHP,EAAWd,EAAMwB,OAAS,EAAIC,OAAOC,SAAS1B,EAAO,IAAM,EAC3D,MACF,QACEc,EAAWd,EAIfiB,EAAkB5B,GAAOgC,GAAWP,EAEpCZ,EAAayB,OAAAC,EAAA,EAAAD,CAAA,GACRX,EADO,CAEVE,WAAYD,KAGdT,EAAKC,SAAS,CAAEH,QAAQ,6EAGjB,IAAAuB,EAAAC,KACCd,EAAWc,KAAKnB,MAAhBK,OACAtC,EAASoD,KAAKzB,MAAd3B,KACR,OACEG,EAAAC,EAAAC,cAACgD,EAAA,SAAD,KACElD,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAiBC,KAAK,MAAM/C,QAAS4C,KAAKvB,cAC1C1B,EAAAC,EAAAC,cAACmD,EAAD,CAAOxD,KAAMA,EAAMC,QAASmD,KAAKpB,aAC/B7B,EAAAC,EAAAC,cAAA,mBACCiC,EAAOE,WAAWiB,IAAI,SAAC7C,EAAWD,GAAZ,OACrBR,EAAAC,EAAAC,cAACqD,EAAD,CACE/C,MAAOA,EACPgD,IAAK/C,EAAUE,OACfF,UAAWA,EACXC,SAAU,SAACsB,GAAYgB,EAAKjB,sBAAsBC,EAAOxB,iBA1DlDiD,cA4ErBlC,EAAOjB,aAAe,CACpB6B,OAAQ,CACNE,WAAY,GACZqB,qBAAsB,GAExBrC,aAAc,aACdvB,QAAS,cAGX,IAYe6D,cAZS,SAACnC,GACvB,MAAQ,CACNW,OAAQX,EAAMW,SAIS,SAACyB,GAC1B,OAAOC,YAAmB,CACxBxC,aAAcyC,GACbF,IAGUD,CAA6CpC,GCzGtDwC,EAAS,SAAAnE,GAAA,IAAGoE,EAAHpE,EAAGoE,cAAH,OACbhE,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eACdH,EAAAC,EAAAC,cAAC+D,EAAD,CAAQnE,QAASkE,OASvBD,EAAOzD,aAAe,CACpB0D,cAAe,cAGFD,yBCjBTG,EAAe,CACnBC,WAAY,GACZC,aAAc,GACdC,eAAe,EACfC,SAAS,GAGLC,cACJ,SAAAA,EAAYzC,GAAO,IAAAH,EAAA,OAAAmB,OAAA0B,EAAA,EAAA1B,CAAAG,KAAAsB,IACjB5C,EAAAmB,OAAA2B,EAAA,EAAA3B,CAAAG,KAAAH,OAAA4B,EAAA,EAAA5B,CAAAyB,GAAAI,KAAA1B,KAAMnB,KAYR8C,SAAW,WACTjD,EAAKC,SAASsC,IAdGvC,EAiBnBkD,aAAe,SAACC,EAAUX,EAAYY,GAAvB,MACb,CACED,WACAX,aACAY,SACAT,QAASH,IAAeY,IAtBTpD,EA0BnBqD,YAAc,SAACC,GACb,OAAIA,EAAOX,QACF,CACLF,aAAc,kBACdC,eAAe,EACfC,QAASW,EAAOX,SAGb,CACLF,aAAc,iCACdC,eAAe,EACfC,QAASW,EAAOX,UArCD3C,EAyCnBuD,aAAe,SAAClD,EAAOmD,GACrB,IACMhE,EAAQa,EAAMO,OAAOpB,MAAMiE,OADnB,8BAGJC,KAAKlE,IACbQ,EAAKC,SAAS,CACZuC,WAAYhD,EACZkD,eAAe,KAhDF1C,EAqDnB2D,aAAe,SAACtD,GACdA,EAAMuD,iBADkB,IAEhBpB,EAAexC,EAAKH,MAApB2C,WACAT,EAAyB/B,EAAKG,MAA9B4B,qBAER,GAAId,OAAO4C,MAAMrB,GACfxC,EAAKC,SAAS,CACZwC,aAAY,UAAAhE,OAAY+D,EAAZ,qBACZE,eAAe,QAEZ,KAAAnC,EAC4CP,EAAKG,MAA9CiD,EADH7C,EACG6C,OAAQD,EADX5C,EACW4C,SAAUW,EADrBvD,EACqBuD,mBACpBR,EAAStD,EAAKkD,aAAaC,EAAUlC,OAAOuB,GAAaY,GAC/DpD,EAAKC,SAASD,EAAKqD,YAAYC,IAC/BS,WAAW,WACTD,EAAmBR,IAClBvB,KAlEL/B,EAAKH,MAAQ0C,EAHIvC,kFAMAgE,GACZC,IAAEC,QAAQF,EAAe1C,KAAKnB,SACjCmB,KAAK2B,WACL3B,KAAK6C,YAAYC,0CAgEZ,IAAA/C,EAAAC,KACC6B,EAAa7B,KAAKnB,MAAlBgD,SADDkB,EAEsD/C,KAAKzB,MAA1D2C,EAFD6B,EAEC7B,WAAYE,EAFb2B,EAEa3B,cAAeD,EAF5B4B,EAE4B5B,aAAcE,EAF1C0B,EAE0C1B,QAEjD,OAAOQ,EAASnC,OACd3C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBAAqB8F,SAAUhD,KAAKqC,cAClDtF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,GAAAC,OACM0E,IAEN9E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,SACEe,KAAK,OACLiF,IAAK,SAACC,GAAYnD,EAAK8C,YAAcK,GACrChF,MAAOgD,EACPzD,SAAUuC,KAAKiC,eAEjBlF,EAAAC,EAAAC,cAAA,SACEe,KAAK,SACLE,MAAM,YAGVnB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,UAAAC,OAAYkE,EAAU,UAAY,KAC5CD,EACED,EACA,OAIN,YAtGeX,aAiHvBc,EAASjE,aAAe,CACtByE,YAAQqB,EACRtB,SAAU,GACVW,mBAAoB,aACpB/B,qBAAsB,KAGTa,QCxGA8B,EAxBK,SAAAzG,GAAA,IAClB0G,EADkB1G,EAClB0G,OACAxB,EAFkBlF,EAElBkF,SACAC,EAHkBnF,EAGlBmF,OACAZ,EAJkBvE,EAIlBuE,WACAG,EALkB1E,EAKlB0E,QALkB,OAOlBtE,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAKoG,GACLtG,EAAAC,EAAAC,cAAA,UAAK4E,GACL9E,EAAAC,EAAAC,cAAA,UAAK6E,GACL/E,EAAAC,EAAAC,cAAA,UAAKiE,GACLnE,EAAAC,EAAAC,cAAA,UAAKoE,EAAU,MAAQ,QCIrBiC,EAAU,SAAA3G,GAAA,IAAG4G,EAAH5G,EAAG4G,QAAH,OACdxG,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,uBArBmB,SAAAsG,GAAO,OAChCA,EAAQC,MAAM,GAAGC,UAAUpD,IAAI,SAAAqD,GAAI,OACjC3G,EAAAC,EAAAC,cAAC0G,EAAD,CACEpD,IAAKmD,EAAKL,OACVA,OAAQK,EAAKL,OACbxB,SAAU6B,EAAK7B,SACfC,OAAQ4B,EAAK5B,OACbZ,WAAYwC,EAAKxC,WACjBG,QAASqC,EAAKrC,YAeZuC,CAAmBL,MAO3BD,EAAQjG,aAAe,CAAEkG,QAAS,IAEnBD,QClCTO,EAAQ,SAAAlH,GAGR,IAFJmH,EAEInH,EAFJmH,cACAC,EACIpH,EADJoH,eAEMC,EAAc,GAAA7G,OAAM2G,EAAN,KAAA3G,OAAuB4G,GACrCE,EAAQF,EAAiB,EAAID,EAAgBC,EAAiB,EAC9DG,EAAiBvB,IAAEwB,MAAc,IAARF,EAAa,GAC5C,OACElH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,UAAAC,OACa+G,EADb,OAAA/G,OACiC6G,EADjC,OAWJH,EAAMxG,aAAe,CACnByG,cAAe,EACfC,eAAgB,GAGHF,QC3BTO,EAAe,SAACzG,EAAKC,GAAuB,IAAlByG,EAAkBC,UAAA5E,OAAA,QAAAyD,IAAAmB,UAAA,GAAAA,UAAA,GAAN,EACpCC,EAAMC,KAAAC,IAAG,GAAMJ,GACfK,EAAa/G,EAAM4G,EACnBI,EAAa/G,EAAM2G,EAGzB,OAFeC,KAAKI,MAAOJ,KAAKK,UAAYF,EAAaD,EAAa,GAAMA,GAAcH,GAKtFO,EAAe,SAACzB,GAMpB,IALA,IAAM0B,EAAc1B,EAAOlF,WACrB6G,EAAOR,KAAKI,MAAMG,EAAYrF,OAAS,GACvCuF,EAAOF,EAAYrF,OAAS,EAE9BwF,EAAcH,EAAYI,UAAU,EAAGF,GAClCG,EAAI,EAAGA,EAAIJ,EAAMI,GAAK,EAAG,CAChC,IAAMC,EAAQJ,EAAO,EAAIG,EACnBE,EAAMD,EAAQ,EAEpBH,GAAW,GAAA/H,OADUiI,EAAI,GAAKJ,EAAO,GAAMC,EAAO,EAClB,IAAM,IAA3B9H,OAAgC4H,EAAYI,UAAUE,EAAOC,IAG1E,OAAOJ,GAGHK,EAAiB,SAAClC,GACtB,UAAAlG,OAAWkG,EAAOmC,QAAQ,KAkBtBC,EAAuB,SAACC,EAASC,GAErC,IADA,IAAMC,EAAU,GACPR,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1BQ,EAAQR,GAAKhB,EAAasB,EAAQ/H,IAAK+H,EAAQ9H,IAAK8H,EAAQG,UAM9D,MAAO,CACLhE,SAJY,GAAA1E,OAAM2H,EAAac,EAAQ,IAA3B,KAAAzI,OAAkCuI,EAAQhI,OAA1C,KAAAP,OAAoD2H,EAAac,EAAQ,KAKrF9D,OAJa6D,EAAYC,EAAQ,GAAIA,EAAQ,MAsC3CE,EAAyB,SAACJ,GAK9B,IAJA,IAAMnB,EAAMC,KAAAC,IAAG,GAAMiB,EAAQG,UACvBE,EAAW3B,EAAa,EAAGsB,EAAQM,UACnCC,EAAQ,GACVC,EAAQ,EACHd,EAAI,EAAGA,EAAIW,EAAUX,GAAK,EACjCa,EAAMb,GAAKhB,EAAasB,EAAQ/H,IAAK+H,EAAQ9H,IAAK8H,EAAQG,UAC1DK,GAASD,EAAMb,GAEjB,IAAMe,EAxBY,SAACD,GAQnB,IAPA,IAAME,EAAgB,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,KACxCC,EAAO,EAELC,EAAY,SAACpI,GACjB,OAAkB,MAAVA,GAAiBA,EAASgI,EAAQG,GAGrCA,EAAOH,GACZG,GAAQD,EAAcG,KAAKD,GAG7B,OAAOD,EAYUG,CAAYN,GACvBpE,EAAS0C,KAAKL,OAAOgC,EAAWD,GAAS3B,GAAUA,EAMzD,MAAO,CACL1C,SANY,wBAAA1E,OAA2B4I,EAA3B,SAAA5I,OACI,IAAb4I,EAAiB,kBAAoB,oBAD5B,YAAA5I,OAvEU,SAAC8I,GACzB,IAAIQ,EAAc,GAWlB,OAVAR,EAAMS,QAAQ,SAAChD,EAAMnG,GACL,IAAVA,EACFkJ,EAAclB,EAAe7B,GACpBnG,EAAQ0I,EAAMvG,OAAS,EAChC+G,GAAW,KAAAtJ,OAASoI,EAAe7B,IAEnC+C,GAAW,QAAAtJ,OAAYoI,EAAe7B,MAInC+C,EA6DHE,CAAkBV,GAFR,2BAAA9I,OAEwCoI,EAAeY,GAFvD,4CAOZrE,WAmCW8E,EAAA,CACbxC,eACAyC,eAjCqB,SAACzH,GACtB,IAAM0H,EAAmB1H,EAAW2H,OAAO,SAACC,EAAKC,GAK/C,OAJIA,EAAIpJ,QACNmJ,EAAIE,KAAKD,GAGJD,GACN,IACGtB,EAAUoB,EAAiB1C,EAAa,EAAG0C,EAAiBpH,OAAS,IAE3E,OAAQgG,EAAQhI,QACd,IAAK,IACH,OAAO+H,EAAqBC,EAAS,SAAC1I,EAAGkF,GAAJ,OAAUlF,EAAIkF,IAErD,IAAK,IACH,OAAOuD,EAAqBC,EAAS,SAAC1I,EAAGkF,GAAJ,OAAUlF,EAAIkF,IAErD,IAAK,OACH,OAAOuD,EAAqBC,EAAS,SAAC1I,EAAGkF,GAAJ,OAAUlF,EAAIkF,IAErD,IAAK,OACH,OAzEyB,SAACwD,GAG9B,IAFA,IAAM5D,EAASsC,EAAasB,EAAQ/H,IAAK+H,EAAQ9H,KAC7CuJ,EAAc/C,EAAasB,EAAQ/H,IAAK+H,EAAQ9H,KAC7B,IAAhBuJ,GACLA,EAAc/C,EAAasB,EAAQ/H,IAAK+H,EAAQ9H,KAKlD,MAAO,CACLiE,SAHY,GAAA1E,OAAM2H,EADFhD,EAASqF,GACb,KAAAhK,OAAiCuI,EAAQhI,OAAzC,KAAAP,OAAmD2H,EAAaqC,IAI5ErF,UA8DSsF,CAAuB1B,GAEhC,IAAK,IACH,OAAOI,EAAuBJ,GAEhC,QACE,OAAO,QC/HP2B,cACJ,SAAAA,EAAYxI,GAAO,IAAAH,EAAA,OAAAmB,OAAA0B,EAAA,EAAA1B,CAAAG,KAAAqH,IACjB3I,EAAAmB,OAAA2B,EAAA,EAAA3B,CAAAG,KAAAH,OAAA4B,EAAA,EAAA5B,CAAAwH,GAAA3F,KAAA1B,KAAMnB,KAgBRyI,uBAAyB,SAACtF,GAAW,IAC3B9C,EAAWR,EAAKG,MAAhBK,OACFqI,EAAcX,EAAMC,eAAe3H,EAAOE,YAChDV,EAAKC,SAAS,SAAA6I,GAAS,OAAA3H,OAAAC,EAAA,EAAAD,CAAA,CACrB0D,QAAO,GAAApG,OAAA0C,OAAA4H,EAAA,EAAA5H,CACF2H,EAAUjE,SADR,CAAA1D,OAAAC,EAAA,EAAAD,CAAA,CAGHwD,OAASmE,EAAUjE,QAAQ7D,OAAS,GACjCsC,KAGP8B,cAAe0D,EAAU1D,eAAiB9B,EAAOX,QAAU,EAAI,IAC5DkG,MA7BY7I,EAiCnBgJ,kBAAoB,SAACC,GACnB,GAAIA,EAAe,KACTzI,EAAWR,EAAKG,MAAhBK,OACF2C,EAAW+E,EAAMC,eAAe3H,EAAOE,YAC7CV,EAAKC,SAALkB,OAAAC,EAAA,EAAAD,CAAA,GAAmBgC,MArCJnD,EAyCnBkJ,YAAc,WACZlJ,EAAKC,SAAS,CAAE4E,QAAS,MAvCzB7E,EAAKH,MAAQ,CACXsD,SAAU,GACVC,YAAQqB,EACRW,cAAe,EACfP,QAAS,IAPM7E,mFAWC,IACVQ,EAAWc,KAAKnB,MAAhBK,OACF2C,EAAW+E,EAAMC,eAAe3H,EAAOE,YAC7CY,KAAKrB,SAALkB,OAAAC,EAAA,EAAAD,CAAA,GAAmBgC,qCA+BZ,IACC3C,EAAWc,KAAKnB,MAAhBK,OADD6D,EAE8C/C,KAAKzB,MAAlDsD,EAFDkB,EAEClB,SAAUC,EAFXiB,EAEWjB,OAAQgC,EAFnBf,EAEmBe,cAAeP,EAFlCR,EAEkCQ,QACzC,OACExG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4K,EAAD,CAAQ9G,cAAef,KAAK0H,oBAC5B3K,EAAAC,EAAAC,cAAC6K,EAAD,CACEhE,cAAeA,EACfC,eAAgBR,EAAQ7D,SAE1B3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAC8K,EAAD,CACElG,SAAUA,EACVC,OAAQA,EACRU,mBAAoBxC,KAAKsH,uBACzB7G,qBAAsBvB,EAAOuB,wBAGjC1D,EAAAC,EAAAC,cAAC+K,EAAD,CAASzE,QAASA,YAhEC/C,aA0E3B6G,EAAahK,aAAe,CAC1B6B,OAAQ,IAGV,IAMewB,cANS,SAACnC,GACvB,MAAQ,CACNW,OAAQX,EAAMW,SAIHwB,CAAyB2G,GCxFxCY,IAAQC,IAAIC,KAEZ,IAMeC,EANH,kBACVrL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACoL,EAAD,QCTEC,EAAiB,CACrBlJ,WAAY,CACV,CAAE1B,OAAQ,IAAKC,IAAK,EAAGC,IAAK,EAAGiI,SAAU,EAAGhI,QAAQ,GACpD,CAAEH,OAAQ,IAAKC,IAAK,EAAGC,IAAK,EAAGiI,SAAU,EAAGhI,QAAQ,GACpD,CAAEH,OAAQ,OAAKC,IAAK,EAAGC,IAAK,EAAGiI,SAAU,EAAGhI,QAAQ,GACpD,CAAEH,OAAQ,OAAKC,IAAK,EAAGC,IAAK,EAAGiI,SAAU,EAAGhI,QAAQ,GACpD,CAAEH,OAAQ,IAAKC,IAAK,EAAGC,IAAK,GAAIiI,SAAU,EAAGG,SAAU,EAAGnI,QAAQ,IAEpE4C,qBAAsB,MAeT8H,EAZO,WAAoC,IAAnChK,EAAmC+F,UAAA5E,OAAA,QAAAyD,IAAAmB,UAAA,GAAAA,UAAA,GAA3BgE,EAAgBE,EAAWlE,UAAA5E,OAAA,EAAA4E,UAAA,QAAAnB,EACxD,OAAQqF,EAAOxK,MACb,IVfyB,gBUgBvB,OAAO6B,OAAAC,EAAA,EAAAD,CAAA,GACFtB,EADL,CAEEW,OAAQsJ,EAAOnK,OAEnB,QACE,OAAOE,ICfEkK,EAJKC,YAAgB,CAClCxJ,OAAQqJ,ICMJI,EAAQC,YAAYH,EAAaI,YAAgBC,MAEvDC,IAASC,OACPjM,EAAAC,EAAAC,cAACgM,EAAA,EAAD,CAAUN,MAAOA,GACf5L,EAAAC,EAAAC,cAACiM,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.10bd356d.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Modal = ({ show, onClose, children }) => {\r\n  return (\r\n    <div className={`modal ${show ? '' : 'hidden'}`}>\r\n      <div className=\"modal-content\">\r\n        <span className=\"modal-close\" onClick={onClose}>&times;</span>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  show: PropTypes.bool,\r\n  onClose: PropTypes.func,\r\n  children: PropTypes.arrayOf(PropTypes.any),\r\n};\r\n\r\nModal.defaultProps = {\r\n  show: false,\r\n  onClose: () => {},\r\n  children: [],\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Operation = ({\r\n  index,\r\n  operation,\r\n  onChange,\r\n}) => {\r\n  const { symbol, min, max, active } = operation;\r\n\r\n  return (\r\n    <div className=\"config-row\">\r\n      <div className=\"config-row-item\">\r\n        <label htmlFor={`active-${index}`} className=\"switch\">\r\n          <input\r\n            id={`active-${index}`}\r\n            type=\"checkbox\"\r\n            onChange={onChange}\r\n            checked={active}\r\n          />\r\n          <span className=\"slider round\" />\r\n        </label>\r\n      </div>\r\n      <div className=\"config-row-item\">\r\n        <span className=\"symbol\">\r\n          {symbol}\r\n        </span>\r\n      </div>\r\n      <div className=\"config-row-item\">\r\n        <label htmlFor=\"min\">\r\n          <span className=\"label-text\">\r\n            {'Min:'}\r\n          </span>\r\n          <input\r\n            className=\"medium-integer\"\r\n            id={`min-${index}`}\r\n            type=\"number\"\r\n            value={min.toString()}\r\n            onChange={onChange}\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className=\"config-row-item\">\r\n        <label htmlFor=\"max\">\r\n          <span className=\"label-text\">\r\n            {'Max:'}\r\n          </span>\r\n          <input\r\n            className=\"medium-integer\"\r\n            id={`max-${index}`}\r\n            type=\"number\"\r\n            value={max.toString()}\r\n            onChange={onChange}\r\n          />\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nOperation.propTypes = {\r\n  index: PropTypes.number.isRequired,\r\n  operation: PropTypes.shape({\r\n    symbol: PropTypes.string,\r\n    min: PropTypes.number,\r\n    max: PropTypes.number,\r\n    active: PropTypes.bool,\r\n  }),\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nOperation.defaultProps = {\r\n  operation: {\r\n    symbol: '',\r\n    min: 0,\r\n    max: 0,\r\n    active: true,\r\n  },\r\n  onChange: () => {},\r\n};\r\n\r\nexport default Operation;\r\n","\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const updateConfig = (data) => {\r\n  return ({\r\n    type: actionTypes.UPDATE_CONFIG,\r\n    data,\r\n  });\r\n};\r\n\r\nexport default updateConfig;\r\n","\r\nexport const UPDATE_CONFIG = 'update_config';\r\n\r\nexport default UPDATE_CONFIG;\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport Modal from '../../components/Modal';\r\nimport Operation from './Operation';\r\nimport { updateConfig as updateConfigAction } from './actions';\r\n\r\nimport '../../App.css';\r\n\r\nclass Config extends Component {\r\n  state = {\r\n    show: false,\r\n    change: false,\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState({ show: true });\r\n  }\r\n\r\n  handleClose = () => {\r\n    const { change } = this.state;\r\n    this.setState({ show: false, change: false });\r\n    this.props.onClose(change);\r\n  }\r\n\r\n  handleOperationChange = (event, index) => {\r\n    const { config, updateConfig } = this.props;\r\n    const updatedOperations = config.operations;\r\n    const { id, value, type } = event.target;\r\n    const element = id.split('-')[0];\r\n    let setValue;\r\n\r\n    switch (type.toLowerCase()) {\r\n      case 'checkbox':\r\n        setValue = !updatedOperations[index][element];\r\n        break;\r\n      case 'number':\r\n        setValue = value.length > 0 ? Number.parseInt(value, 10) : 0;\r\n        break;\r\n      default:\r\n        setValue = value;\r\n        break;\r\n    }\r\n\r\n    updatedOperations[index][element] = setValue;\r\n\r\n    updateConfig({\r\n      ...config,\r\n      operations: updatedOperations,\r\n    });\r\n\r\n    this.setState({ change: true });\r\n  };\r\n\r\n  render() {\r\n    const { config } = this.props;\r\n    const { show } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <FontAwesomeIcon icon=\"cog\" onClick={this.handleClick} />\r\n        <Modal show={show} onClose={this.handleClose}>\r\n          <p>Config</p>\r\n          {config.operations.map((operation, index) => (\r\n            <Operation\r\n              index={index}\r\n              key={operation.symbol}\r\n              operation={operation}\r\n              onChange={(event) => { this.handleOperationChange(event, index); }}\r\n            />\r\n          ))}\r\n        </Modal>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nConfig.propTypes = {\r\n  config: PropTypes.shape({\r\n    operations: PropTypes.arrayOf(PropTypes.shape()),\r\n    timeBetweenQuestions: PropTypes.number,\r\n  }),\r\n  updateConfig: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n};\r\n\r\nConfig.defaultProps = {\r\n  config: {\r\n    operations: [],\r\n    timeBetweenQuestions: 0,\r\n  },\r\n  updateConfig: () => {},\r\n  onClose: () => {},\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    config: state.config,\r\n  });\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators({\r\n    updateConfig: updateConfigAction,\r\n  }, dispatch);\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Config);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Config from '../../containers/Config';\r\n\r\nconst Header = ({ onConfigClose }) => (\r\n  <header className=\"app-header\">\r\n    <span className=\"header-item\">\r\n      <Config onClose={onConfigClose} />\r\n    </span>\r\n  </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n  onConfigClose: PropTypes.func,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  onConfigClose: () => {},\r\n};\r\n\r\nexport default Header;\r\n","import _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst initialState = {\r\n  userAnswer: '',\r\n  resultString: '',\r\n  displayResult: false,\r\n  correct: false,\r\n};\r\n\r\nclass Question extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = initialState;\r\n  }\r\n\r\n  componentDidUpdate(incomingProps) {\r\n    if (!_.isEqual(incomingProps, this.props)) {\r\n      this.onUpdate();\r\n      this.answerInput.focus();\r\n    }\r\n  }\r\n\r\n  onUpdate = () => {\r\n    this.setState(initialState);\r\n  }\r\n\r\n  createResult = (question, userAnswer, answer) => (\r\n    {\r\n      question,\r\n      userAnswer,\r\n      answer,\r\n      correct: userAnswer === answer,\r\n    }\r\n  );\r\n\r\n  checkAnswer = (result) => {\r\n    if (result.correct) {\r\n      return {\r\n        resultString: 'You are correct',\r\n        displayResult: true,\r\n        correct: result.correct,\r\n      };\r\n    }\r\n    return {\r\n      resultString: 'That is not the correct answer',\r\n      displayResult: true,\r\n      correct: result.correct,\r\n    };\r\n  }\r\n\r\n  handleChange = (event, b) => {\r\n    const regex = /(\\s)|(^[-]?[\\d]*[.]?[\\d]*)$/;\r\n    const value = event.target.value.trim();\r\n\r\n    if (regex.test(value)) {\r\n      this.setState({\r\n        userAnswer: value,\r\n        displayResult: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { userAnswer } = this.state;\r\n    const { timeBetweenQuestions } = this.props;\r\n\r\n    if (Number.isNaN(userAnswer)) {\r\n      this.setState({\r\n        resultString: `Error '${userAnswer}' is not a number`,\r\n        displayResult: true,\r\n      });\r\n    } else {\r\n      const { answer, question, onQuestionAnswered } = this.props;\r\n      const result = this.createResult(question, Number(userAnswer), answer);\r\n      this.setState(this.checkAnswer(result));\r\n      setTimeout(() => {\r\n        onQuestionAnswered(result);\r\n      }, timeBetweenQuestions);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { question } = this.props;\r\n    const { userAnswer, displayResult, resultString, correct } = this.state;\r\n\r\n    return question.length ? (\r\n      <form className=\"question-container\" onSubmit={this.handleSubmit}>\r\n        <div className=\"question\">\r\n          {`${question}`}\r\n        </div>\r\n        <div className=\"answer\">\r\n          <input\r\n            type=\"text\"\r\n            ref={(input) => { this.answerInput = input; }}\r\n            value={userAnswer}\r\n            onChange={this.handleChange}\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Submit\"\r\n          />\r\n        </div>\r\n        <div className={`result ${correct ? 'correct' : ''}`}>\r\n          { displayResult\r\n            ? resultString\r\n            : null\r\n          }\r\n        </div>\r\n      </form>\r\n    ) : null;\r\n  }\r\n}\r\n\r\nQuestion.propTypes = {\r\n  answer: PropTypes.number,\r\n  question: PropTypes.string,\r\n  onQuestionAnswered: PropTypes.func,\r\n  timeBetweenQuestions: PropTypes.number,\r\n};\r\n\r\nQuestion.defaultProps = {\r\n  answer: undefined,\r\n  question: '',\r\n  onQuestionAnswered: () => {},\r\n  timeBetweenQuestions: 2000,\r\n};\r\n\r\nexport default Question;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst HistoryItem = ({\r\n  number,\r\n  question,\r\n  answer,\r\n  userAnswer,\r\n  correct,\r\n}) => (\r\n  <tr>\r\n    <td>{number}</td>\r\n    <td>{question}</td>\r\n    <td>{answer}</td>\r\n    <td>{userAnswer}</td>\r\n    <td>{correct ? 'Yes' : 'No'}</td>\r\n  </tr>\r\n);\r\n\r\nHistoryItem.propTypes = {\r\n  number: PropTypes.number.isRequired,\r\n  question: PropTypes.string.isRequired,\r\n  answer: PropTypes.number.isRequired,\r\n  userAnswer: PropTypes.number.isRequired,\r\n  correct: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default HistoryItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport HistoryItem from './HistoryItem';\r\n\r\n\r\nconst renderHistoryItems = history => (\r\n  history.slice(0).reverse().map(item => (\r\n    <HistoryItem\r\n      key={item.number}\r\n      number={item.number}\r\n      question={item.question}\r\n      answer={item.answer}\r\n      userAnswer={item.userAnswer}\r\n      correct={item.correct}\r\n    />\r\n  ))\r\n);\r\n\r\nconst History = ({ history }) => (\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <th>Number</th>\r\n        <th>Question</th>\r\n        <th>Expected Answer</th>\r\n        <th>You Answered</th>\r\n        <th>Correct?</th>\r\n      </tr>\r\n      { renderHistoryItems(history) }\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nHistory.propTypes = { history: PropTypes.arrayOf(PropTypes.shape()) };\r\n\r\nHistory.defaultProps = { history: [] };\r\n\r\nexport default History;\r\n","import _ from 'lodash';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Score = ({\r\n  numberCorrect,\r\n  totalQuestions,\r\n}) => {\r\n  const correctVsTotal = `${numberCorrect}/${totalQuestions}`;\r\n  const score = totalQuestions > 0 ? numberCorrect / totalQuestions : 0;\r\n  const scoreAsPercent = _.round(score * 100, 2);\r\n  return (\r\n    <div className=\"score\">\r\n      {`Score: ${scoreAsPercent}% (${correctVsTotal})`}\r\n    </div>\r\n  );\r\n};\r\n\r\nScore.propTypes = {\r\n  numberCorrect: PropTypes.number,\r\n  totalQuestions: PropTypes.number,\r\n};\r\n\r\nScore.defaultProps = {\r\n  numberCorrect: 0,\r\n  totalQuestions: 0,\r\n};\r\n\r\nexport default Score;\r\n","\r\nconst randomNumber = (min, max, precision = 0) => {\r\n  const factor = 10 ** precision;\r\n  const preciseMin = min * factor;\r\n  const preciseMax = max * factor;\r\n  const number = Math.floor((Math.random() * (preciseMax - preciseMin + 1)) + preciseMin) / factor;\r\n\r\n  return number;\r\n};\r\n\r\nconst formatNumber = (number) => {\r\n  const numAsString = number.toString();\r\n  const div3 = Math.floor(numAsString.length / 3);\r\n  const mod3 = numAsString.length % 3;\r\n\r\n  let returnValue = numAsString.substring(0, mod3);\r\n  for (let i = 0; i < div3; i += 1) {\r\n    const start = mod3 + 3 * i;\r\n    const end = start + 3;\r\n    const seperatorOn = (i > 0 && div3 > 0) || mod3 > 0;\r\n    returnValue += `${seperatorOn ? ',' : ''}${numAsString.substring(start, end)}`;\r\n  }\r\n\r\n  return returnValue;\r\n};\r\n\r\nconst formatCurrency = (number) => {\r\n  return `$${number.toFixed(2)}`;\r\n};\r\n\r\nconst formatPriceString = (items) => {\r\n  let priceString = '';\r\n  items.forEach((item, index) => {\r\n    if (index === 0) {\r\n      priceString = formatCurrency(item);\r\n    } else if (index < items.length - 1) {\r\n      priceString += `, ${formatCurrency(item)}`;\r\n    } else {\r\n      priceString += ` and ${formatCurrency(item)}`;\r\n    }\r\n  });\r\n\r\n  return priceString;\r\n};\r\n\r\nconst createSimpleQuestion = (operand, accumulator) => {\r\n  const numbers = [];\r\n  for (let i = 0; i < 2; i += 1) {\r\n    numbers[i] = randomNumber(operand.min, operand.max, operand.decimals);\r\n  }\r\n\r\n  const question = `${formatNumber(numbers[0])} ${operand.symbol} ${formatNumber(numbers[1])}`;\r\n  const answer = accumulator(numbers[0], numbers[1]);\r\n\r\n  return {\r\n    question,\r\n    answer,\r\n  };\r\n};\r\n\r\nconst createDivisionQuestion = (operand) => {\r\n  const answer = randomNumber(operand.min, operand.max);\r\n  let denominator = randomNumber(operand.min, operand.max);\r\n  while (denominator === 0) {\r\n    denominator = randomNumber(operand.min, operand.max);\r\n  }\r\n  const numerator = answer * denominator;\r\n  const question = `${formatNumber(numerator)} ${operand.symbol} ${formatNumber(denominator)}`;\r\n\r\n  return {\r\n    question,\r\n    answer,\r\n  };\r\n};\r\n\r\nconst findMinCash = (total) => {\r\n  const denominations = [1, 2, 5, 10, 20, 50, 100];\r\n  let cash = 0;\r\n\r\n  const predicate = (value) => {\r\n    return (value === 100 || value > (total - cash));\r\n  };\r\n\r\n  while (cash < total) {\r\n    cash += denominations.find(predicate);\r\n  }\r\n\r\n  return cash;\r\n};\r\n\r\nconst createCurrencyQuestion = (operand) => {\r\n  const factor = 10 ** operand.decimals;\r\n  const numItems = randomNumber(1, operand.maxItems);\r\n  const items = [];\r\n  let total = 0;\r\n  for (let i = 0; i < numItems; i += 1) {\r\n    items[i] = randomNumber(operand.min, operand.max, operand.decimals);\r\n    total += items[i];\r\n  }\r\n  const cashPaid = findMinCash(total);\r\n  const answer = Math.round((cashPaid - total) * factor) / factor;\r\n  const question = `You want to purchase ${numItems} \\\r\n    ${(numItems === 1 ? 'item with price' : 'items with prices')} of \\\r\n    ${formatPriceString(items)}. You give the cashier ${formatCurrency(cashPaid)}, \\\r\n    how much change should you expect?`;\r\n\r\n  return {\r\n    question,\r\n    answer,\r\n  };\r\n};\r\n\r\nconst createQuestion = (operations) => {\r\n  const activeOperations = operations.reduce((acc, cur) => {\r\n    if (cur.active) {\r\n      acc.push(cur);\r\n    }\r\n\r\n    return acc;\r\n  }, []);\r\n  const operand = activeOperations[randomNumber(0, activeOperations.length - 1)];\r\n\r\n  switch (operand.symbol) {\r\n    case '+':\r\n      return createSimpleQuestion(operand, (a, b) => a + b);\r\n\r\n    case '-':\r\n      return createSimpleQuestion(operand, (a, b) => a - b);\r\n\r\n    case '×':\r\n      return createSimpleQuestion(operand, (a, b) => a * b);\r\n\r\n    case '÷':\r\n      return createDivisionQuestion(operand);\r\n\r\n    case '$':\r\n      return createCurrencyQuestion(operand);\r\n\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport default {\r\n  randomNumber,\r\n  createQuestion,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Header from '../../components/Header';\r\nimport Question from '../../components/Question';\r\nimport History from '../../components/History';\r\nimport Score from '../../components/Score';\r\nimport utils from '../../utils';\r\nimport '../../App.css';\r\n\r\n\r\nclass MathPractice extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      question: '',\r\n      answer: undefined,\r\n      numberCorrect: 0,\r\n      history: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { config } = this.props;\r\n    const question = utils.createQuestion(config.operations);\r\n    this.setState({ ...question });\r\n  }\r\n\r\n  handleQuestionAnswered = (result) => {\r\n    const { config } = this.props;\r\n    const newQuestion = utils.createQuestion(config.operations);\r\n    this.setState(prevState => ({\r\n      history: [\r\n        ...prevState.history,\r\n        {\r\n          number: (prevState.history.length + 1),\r\n          ...result,\r\n        },\r\n      ],\r\n      numberCorrect: prevState.numberCorrect + (result.correct ? 1 : 0),\r\n      ...newQuestion,\r\n    }));\r\n  };\r\n\r\n  handleConfigClose = (configChanged) => {\r\n    if (configChanged) {\r\n      const { config } = this.props;\r\n      const question = utils.createQuestion(config.operations);\r\n      this.setState({ ...question });\r\n    }\r\n  }\r\n\r\n  handleReset = () => {\r\n    this.setState({ history: [] });\r\n  }\r\n\r\n  render() {\r\n    const { config } = this.props;\r\n    const { question, answer, numberCorrect, history } = this.state;\r\n    return (\r\n      <div>\r\n        <Header onConfigClose={this.handleConfigClose} />\r\n        <Score\r\n          numberCorrect={numberCorrect}\r\n          totalQuestions={history.length}\r\n        />\r\n        <div className=\"app-item\">\r\n          <Question\r\n            question={question}\r\n            answer={answer}\r\n            onQuestionAnswered={this.handleQuestionAnswered}\r\n            timeBetweenQuestions={config.timeBetweenQuestions}\r\n          />\r\n        </div>\r\n        <History history={history} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMathPractice.propTypes = {\r\n  config: PropTypes.shape(),\r\n};\r\n\r\nMathPractice.defaultProps = {\r\n  config: {},\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    config: state.config,\r\n  });\r\n};\r\n\r\nexport default connect(mapStateToProps)(MathPractice);\r\n","import React from 'react';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport MathPractice from './containers/MathPractice';\r\nimport './App.css';\r\n\r\nlibrary.add(faCog);\r\n\r\nconst App = () => (\r\n  <div className=\"app\">\r\n    <MathPractice />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","\r\nimport * as actionTypes from './actionTypes';\r\n\r\nconst DEFAULT_CONFIG = {\r\n  operations: [\r\n    { symbol: '+', min: 0, max: 9, decimals: 0, active: true },\r\n    { symbol: '-', min: 0, max: 9, decimals: 0, active: true },\r\n    { symbol: '×', min: 0, max: 9, decimals: 0, active: true },\r\n    { symbol: '÷', min: 0, max: 9, decimals: 0, active: true },\r\n    { symbol: '$', min: 0, max: 10, decimals: 2, maxItems: 3, active: true },\r\n  ],\r\n  timeBetweenQuestions: 1500,\r\n};\r\n\r\nconst configReducer = (state = DEFAULT_CONFIG, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.UPDATE_CONFIG:\r\n      return {\r\n        ...state,\r\n        config: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default configReducer;\r\n","import { combineReducers } from 'redux';\r\nimport configReducer from './containers/Config/reducers';\r\n\r\nconst rootReducer = combineReducers({\r\n  config: configReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport rootReducer from './reducers';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}